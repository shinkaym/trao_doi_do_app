// Model cho tin nh·∫Øn
class ChatMessage {
  final String id;
  final String senderId;
  final String senderName;
  final String senderAvatar;
  final String content;
  final String type; // text, image, location, post_info
  final DateTime createdAt;
  final bool isRead;
  final Map<String, dynamic>? metadata; // cho post_info, location, v.v.

  const ChatMessage({
    required this.id,
    required this.senderId,
    required this.senderName,
    required this.senderAvatar,
    required this.content,
    required this.type,
    required this.createdAt,
    required this.isRead,
    this.metadata,
  });
}

// Model cho th√¥ng tin cu·ªôc tr√≤ chuy·ªán
class ChatInfo {
  final String interestId;
  final String postId;
  final String postTitle;
  final String postType;
  final String postStatus;
  final String otherUserId;
  final String otherUserName;
  final String otherUserAvatar;
  final DateTime? lastSeen;

  const ChatInfo({
    required this.interestId,
    required this.postId,
    required this.postTitle,
    required this.postType,
    required this.postStatus,
    required this.otherUserId,
    required this.otherUserName,
    required this.otherUserAvatar,
    this.lastSeen,
  });
}

const mockChatInfo = ChatInfo(
  interestId: 'interest_1',
  postId: '1',
  postTitle: 'T√¨m chi·∫øc v√≠ da m√†u n√¢u b·ªã m·∫•t t·∫°i qu·∫≠n 1',
  postType: 'findLost',
  postStatus: 'active',
  otherUserId: 'user1',
  otherUserName: 'Nguy·ªÖn VƒÉn A',
  otherUserAvatar: '',
  lastSeen: null,
);

final mockMessages = <ChatMessage>[
  ChatMessage(
    id: '1',
    senderId: 'user1',
    senderName: 'Nguy·ªÖn VƒÉn A',
    senderAvatar: '',
    content: 'Xin ch√†o! T√¥i ƒë√£ ƒëƒÉng b√†i t√¨m chi·∫øc v√≠ b·ªã m·∫•t.',
    type: 'text',
    createdAt: DateTime.now().subtract(Duration(hours: 2)),
    isRead: true,
  ),
  ChatMessage(
    id: '2',
    senderId: 'current_user',
    senderName: 'B·∫°n',
    senderAvatar: '',
    content:
        'Ch√†o b·∫°n! T√¥i c√≥ th·ªÉ gi√∫p b·∫°n t√¨m ki·∫øm. B·∫°n c√≥ th·ªÉ m√¥ t·∫£ chi ti·∫øt h∆°n kh√¥ng?',
    type: 'text',
    createdAt: DateTime.now().subtract(Duration(hours: 1, minutes: 45)),
    isRead: true,
  ),
  ChatMessage(
    id: '3',
    senderId: 'user1',
    senderName: 'Nguy·ªÖn VƒÉn A',
    senderAvatar: '',
    content: 'C·∫£m ∆°n b·∫°n! ƒê√¢y l√† th√¥ng tin chi ti·∫øt v·ªÅ chi·∫øc v√≠:',
    type: 'text',
    createdAt: DateTime.now().subtract(Duration(hours: 1, minutes: 30)),
    isRead: true,
  ),
  ChatMessage(
    id: '5',
    senderId: 'current_user',
    senderName: 'B·∫°n',
    senderAvatar: '',
    content: 'T√¥i s·∫Ω ƒë·ªÉ √Ω v√† h·ªèi th√™m b·∫°n b√® xung quanh khu v·ª±c ƒë√≥.',
    type: 'text',
    createdAt: DateTime.now().subtract(Duration(minutes: 30)),
    isRead: true,
  ),
  ChatMessage(
    id: '6',
    senderId: 'user1',
    senderName: 'Nguy·ªÖn VƒÉn A',
    senderAvatar: '',
    content: 'C·∫£m ∆°n b·∫°n r·∫•t nhi·ªÅu! üôè',
    type: 'text',
    createdAt: DateTime.now().subtract(Duration(minutes: 25)),
    isRead: false,
  ),
];
